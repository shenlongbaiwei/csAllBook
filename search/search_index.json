{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to davely's csAll book Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"\u9996\u9875"},{"location":"#welcome-to-davelys-csall-book","text":"","title":"Welcome to davely's csAll book"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E5%90%88%E9%9B%86/","text":"\u52a8\u6001\u89c4\u5212\u5408\u96c6 \u672c\u5408\u96c6\u6240\u6709\u9898\u76ee\u5747\u6765\u81ealeetcode\uff0c\u76f8\u5173\u89e3\u6cd5\u662f\u5bf9\u4ee3\u7801\u968f\u60f3\u5f55carl\u8001\u5e08\u601d\u8def\u7684\u4e2a\u4eba\u603b\u7ed3\u548c\u63d0\u70bc\uff0c\u4ec5\u7528\u4e8e\u5b66\u4e60\u9014\u5f84\u3002 \u9012\u5f52\u4e94\u516c\u5f0f\uff1a 1\u3001\u786e\u5b9adp\u6570\u7ec4\u542b\u4e49\u53ca\u5176\u4e0b\u6807\u542b\u4e49 2\u3001\u786e\u5b9adp\u6570\u7ec4\u9012\u63a8\u516c\u5f0f 2\u3001\u521d\u59cb\u5316dp\u6570\u7ec4 3\u3001\u786e\u5b9a\u904d\u5386\u987a\u5e8f 4\u3001\u4e3e\u4f8b\u8fdb\u884c\u63a8\u5bfcdp\u6570\u7ec4 \u6590\u6ce2\u90a3\u5951\u6570\u5217 \u9898\u76ee\u8981\u6c42\u5f88\u7b80\u5355\uff0c\u65e0\u9700\u591a\u8a00\u3002 1\u3001dp\u6570\u7ec4\u8868\u793a\u5bf9\u5e94\u5143\u7d20\u5927\u5c0f 2\u3001\u9012\u63a8\u516c\u5f0f:dp[i]=dp[i-1]+dp[i-2]; 3\u3001\u521d\u59cb\u5316dp\u6570\u7ec4\uff1adp[0]=0,dp[1]=1; 4\u3001\u786e\u5b9a\u904d\u5386\u987a\u5e8f\uff1a\u5f88\u660e\u663e\u662f\u4ece\u524d\u5f80\u540e\u8fdb\u884c\u904d\u5386\uff0c\u4ece0,1-\u300b2\uff0c3.\u3002\u3002 5\u3001\u76f4\u63a5\u8fdb\u884c\u904d\u5386\u63a8\u5bfc\u5457 \u4ee3\u7801\uff1a int fib(int n){ if(n<=1) return n; int dp[2]; dp[0]=0; dp[1]=1; for(int i=2;i<=n;i++){ int sum=dp[0]+dp[1]; dp[0]=dp[1]; dp[1]=sum; } return dp[1]; } ending!!!!!!!!!!!! \u722c\u697c\u68af \u601d\u8def\uff1a \u722c\u697c\u68af\u95ee\u9898\uff0c\u5176\u5b9e\u5c31\u662f\u521d\u59cbdp\u6570\u7ec4\uff0c\u7136\u540edp\u6570\u7ec4\u7684\u9012\u63a8\u516c\u5f0f\u5982\u4e0b\uff1a dp[i]=dp[i-1]+dp[i-2]; \u9012\u63a8\u987a\u5e8f\uff1a\u5f88\u660e\u663e\u4ece\u524d\u5f80\u540e\u3002 \u7136\u540e\u5c31\u662ffor\u5faa\u73af\u8fdb\u884c\u9012\u63a8\u904d\u5386\u54af\u3002 \u4ee3\u7801\uff1a int climbStairs(int n) { if(n<=1) return n; int dp[3]; dp[1]=1; dp[2]=2; for(int i=3;i<=n;i++){ int sum=dp[1]+dp[2]; dp[1]=dp[2]; dp[2]=sum; } return dp[2]; } \u603b\u7ed3\uff1a \u4ee5\u4e0a\u5c31\u662f\u76f8\u5173\u722c\u697c\u68af\u95ee\u9898\u7684\u89e3\u6cd5\uff0c\u5176\u5b9e\u8fd9\u4e2a\u65b9\u6cd5\u601d\u8def\u4e5f\u53ef\u4ee5\u5e94\u7528\u5230\uff0c\u722c\u4e00\u5c42\u697c\u4e00\u6b21\u4e00\u6b65\uff0c\uff0c\u4e00\u6b21\u4e24\u6b65\uff0c\u4e00\u6b21\u4e09\u6b65\uff0c\u4e00\u76f4\u5f80\u4e0b\u4e3e\u4e2a\u4f8b\u5b50\u3002\u8fd9\u79cd\u4e5f\u90fd\u80fd\u8fdb\u884c\u52a8\u6001\u89c4\u5212\u3002 class Solution { public: int climbStairs(int n) { vector<int> dp(n + 1, 0); dp[0] = 1; for (int i = 1; i <= n; i++) { for (int j = 1; j <= m; j++) { // \u628am\u6362\u62102\uff0c\u5c31\u53ef\u4ee5AC\u722c\u697c\u68af\u8fd9\u9053\u9898 if (i - j >= 0) dp[i] += dp[i - j]; } } return dp[n]; } }; \u722c\u697c\u68af\u7684\u6700\u5c0f\u82b1\u8d39 \u601d\u8def\uff1a\u5176\u5b9e\u4e3b\u8981\u5c31\u662f\u5bf9\u4e8e\u52a8\u5f52\u6570\u7ec4\u7684\u5b9a\u4e49\u548c\u76f8\u5173\u9012\u63a8\u516c\u5f0f\u7684\u7814\u7a76\uff0c\u4ee5\u53ca\u5173\u952e\u7684\u722c\u697c\u68af\u65f6\u7684\u7b2c\u4e00\u3001\u4e8c\u6b65\u7684\u82b1\u8d39\u76f8\u5173\u7684\u95ee\u9898\u3002 \u8fd9\u91cc\uff1adp[i]=min(dp[i-1]+cost[i-1],dp[i-2]+cost[i-2]); \u540c\u65f6\uff0c\u5728\u9898\u76ee\u8981\u6c42\u4e2d\uff0c\u6240\u5199\u7684\u521d\u59cb\u5728\u7b2c0\u5c42\u7684\u65f6\u5019\u53ef\u4ee5\u4e0d\u82b1\u8d39\uff0c\u6216\u8005\u76f4\u63a5\u4ece\u7b2c\u4e00\u697c\u5f00\u59cb\u4e5f\u884c\uff0c\u6240\u4ee5\u8fd9\u4e24\u5c42\u697c\u90fd\u4e0d\u82b1\u8d39\uff0c\u540c\u65f6\uff0c\u7531\u8fd9\u4e24\u5c42\u697c\u53ef\u4ee5\u63a8\u5bfc\u51fa\u540e\u7eed\u6240\u6709\u697c\u7684\u6700\u5c0f\u82b1\u8d39\u3002\u540c\u65f6\uff0c\u9012\u63a8\u987a\u5e8f\uff0c\u5f88\u660e\u663e\u662f\u4ece\u524d\u5f80\u540e\uff0c\u6240\u4ee5\u8fd9\u91cc\u5c31\u76f4\u63a5for\u5faa\u73af\u5373\u53ef\uff0c\u4f46\u662f\u5728\u9047\u5230\u6bd4\u5982\u80cc\u5305\u95ee\u9898\u7684\u65f6\u5019\uff0c\u6211\u4eec\u9700\u8981\u91cd\u65b0\u8003\u8651\uff0c\u56e0\u4e3a\u80cc\u5305\u95ee\u9898\u9700\u8981\u4e24\u4e2afor\u5faa\u73af\uff0c\u56e0\u6b64\u5728\u8003\u8651\u5faa\u73af\u7684\u65f6\u5019\u8981\u91cd\u70b9\u5173\u6ce8for\u5faa\u73af\u7684\u904d\u5386\u987a\u5e8f\u3002\u4f46\u662f\u5728\u672c\u9898\u4e2d\u65e0\u9700\u8fc7\u591a\u5173\u6ce8\u8be5\u95ee\u9898\u3002 \u4ee3\u7801\u5c55\u793a\uff1a int minCostClimbingStairs(vector<int>& cost) { //if(cost.size()<=1) return cost[0]; int dp0=0; int dp1=0; for(int i=2;i<=cost.size();i++){ int sum=min(dp0+cost[i-2],dp1+cost[i-1]); dp0=dp1; dp1=sum; } return dp1; } }; \u603b\u7ed3\uff0c\u603b\u4f53\u4e0a\u8be5\u95ee\u9898\u662f\u5bf9\u524d\u9762\u722c\u697c\u68af\u95ee\u9898\u7684\u4e00\u4e2a\u5ef6\u7eed\u548c\u53d8\u5f62\uff0c\u56e0\u6b64\u6211\u4eec\u5728\u8ba1\u7b97\u7684\u65f6\u5019\uff0c\u9700\u8981\u8fdb\u4e00\u6b65\u8003\u8651\u6bcf\u5c42\u697c\u7684\u6700\u5c0f\u82b1\u8d39\uff0c\u56e0\u6b64\u9700\u8981\u7528\u5230min\u51fd\u6570\uff0c\u540c\u65f6\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u76f8\u5173\u6761\u4ef6\uff0c\u8fdb\u884c\u76f8\u5173\u64cd\u4f5c\u3002","title":"\u6d4b\u8bd5\u9875"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E5%90%88%E9%9B%86/#_1","text":"\u672c\u5408\u96c6\u6240\u6709\u9898\u76ee\u5747\u6765\u81ealeetcode\uff0c\u76f8\u5173\u89e3\u6cd5\u662f\u5bf9\u4ee3\u7801\u968f\u60f3\u5f55carl\u8001\u5e08\u601d\u8def\u7684\u4e2a\u4eba\u603b\u7ed3\u548c\u63d0\u70bc\uff0c\u4ec5\u7528\u4e8e\u5b66\u4e60\u9014\u5f84\u3002 \u9012\u5f52\u4e94\u516c\u5f0f\uff1a 1\u3001\u786e\u5b9adp\u6570\u7ec4\u542b\u4e49\u53ca\u5176\u4e0b\u6807\u542b\u4e49 2\u3001\u786e\u5b9adp\u6570\u7ec4\u9012\u63a8\u516c\u5f0f 2\u3001\u521d\u59cb\u5316dp\u6570\u7ec4 3\u3001\u786e\u5b9a\u904d\u5386\u987a\u5e8f 4\u3001\u4e3e\u4f8b\u8fdb\u884c\u63a8\u5bfcdp\u6570\u7ec4","title":"\u52a8\u6001\u89c4\u5212\u5408\u96c6"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E5%90%88%E9%9B%86/#_2","text":"\u9898\u76ee\u8981\u6c42\u5f88\u7b80\u5355\uff0c\u65e0\u9700\u591a\u8a00\u3002 1\u3001dp\u6570\u7ec4\u8868\u793a\u5bf9\u5e94\u5143\u7d20\u5927\u5c0f 2\u3001\u9012\u63a8\u516c\u5f0f:dp[i]=dp[i-1]+dp[i-2]; 3\u3001\u521d\u59cb\u5316dp\u6570\u7ec4\uff1adp[0]=0,dp[1]=1; 4\u3001\u786e\u5b9a\u904d\u5386\u987a\u5e8f\uff1a\u5f88\u660e\u663e\u662f\u4ece\u524d\u5f80\u540e\u8fdb\u884c\u904d\u5386\uff0c\u4ece0,1-\u300b2\uff0c3.\u3002\u3002 5\u3001\u76f4\u63a5\u8fdb\u884c\u904d\u5386\u63a8\u5bfc\u5457 \u4ee3\u7801\uff1a int fib(int n){ if(n<=1) return n; int dp[2]; dp[0]=0; dp[1]=1; for(int i=2;i<=n;i++){ int sum=dp[0]+dp[1]; dp[0]=dp[1]; dp[1]=sum; } return dp[1]; } ending!!!!!!!!!!!!","title":"\u6590\u6ce2\u90a3\u5951\u6570\u5217"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E5%90%88%E9%9B%86/#_3","text":"\u601d\u8def\uff1a \u722c\u697c\u68af\u95ee\u9898\uff0c\u5176\u5b9e\u5c31\u662f\u521d\u59cbdp\u6570\u7ec4\uff0c\u7136\u540edp\u6570\u7ec4\u7684\u9012\u63a8\u516c\u5f0f\u5982\u4e0b\uff1a dp[i]=dp[i-1]+dp[i-2]; \u9012\u63a8\u987a\u5e8f\uff1a\u5f88\u660e\u663e\u4ece\u524d\u5f80\u540e\u3002 \u7136\u540e\u5c31\u662ffor\u5faa\u73af\u8fdb\u884c\u9012\u63a8\u904d\u5386\u54af\u3002 \u4ee3\u7801\uff1a int climbStairs(int n) { if(n<=1) return n; int dp[3]; dp[1]=1; dp[2]=2; for(int i=3;i<=n;i++){ int sum=dp[1]+dp[2]; dp[1]=dp[2]; dp[2]=sum; } return dp[2]; } \u603b\u7ed3\uff1a \u4ee5\u4e0a\u5c31\u662f\u76f8\u5173\u722c\u697c\u68af\u95ee\u9898\u7684\u89e3\u6cd5\uff0c\u5176\u5b9e\u8fd9\u4e2a\u65b9\u6cd5\u601d\u8def\u4e5f\u53ef\u4ee5\u5e94\u7528\u5230\uff0c\u722c\u4e00\u5c42\u697c\u4e00\u6b21\u4e00\u6b65\uff0c\uff0c\u4e00\u6b21\u4e24\u6b65\uff0c\u4e00\u6b21\u4e09\u6b65\uff0c\u4e00\u76f4\u5f80\u4e0b\u4e3e\u4e2a\u4f8b\u5b50\u3002\u8fd9\u79cd\u4e5f\u90fd\u80fd\u8fdb\u884c\u52a8\u6001\u89c4\u5212\u3002 class Solution { public: int climbStairs(int n) { vector<int> dp(n + 1, 0); dp[0] = 1; for (int i = 1; i <= n; i++) { for (int j = 1; j <= m; j++) { // \u628am\u6362\u62102\uff0c\u5c31\u53ef\u4ee5AC\u722c\u697c\u68af\u8fd9\u9053\u9898 if (i - j >= 0) dp[i] += dp[i - j]; } } return dp[n]; } };","title":"\u722c\u697c\u68af"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E5%90%88%E9%9B%86/#_4","text":"\u601d\u8def\uff1a\u5176\u5b9e\u4e3b\u8981\u5c31\u662f\u5bf9\u4e8e\u52a8\u5f52\u6570\u7ec4\u7684\u5b9a\u4e49\u548c\u76f8\u5173\u9012\u63a8\u516c\u5f0f\u7684\u7814\u7a76\uff0c\u4ee5\u53ca\u5173\u952e\u7684\u722c\u697c\u68af\u65f6\u7684\u7b2c\u4e00\u3001\u4e8c\u6b65\u7684\u82b1\u8d39\u76f8\u5173\u7684\u95ee\u9898\u3002 \u8fd9\u91cc\uff1adp[i]=min(dp[i-1]+cost[i-1],dp[i-2]+cost[i-2]); \u540c\u65f6\uff0c\u5728\u9898\u76ee\u8981\u6c42\u4e2d\uff0c\u6240\u5199\u7684\u521d\u59cb\u5728\u7b2c0\u5c42\u7684\u65f6\u5019\u53ef\u4ee5\u4e0d\u82b1\u8d39\uff0c\u6216\u8005\u76f4\u63a5\u4ece\u7b2c\u4e00\u697c\u5f00\u59cb\u4e5f\u884c\uff0c\u6240\u4ee5\u8fd9\u4e24\u5c42\u697c\u90fd\u4e0d\u82b1\u8d39\uff0c\u540c\u65f6\uff0c\u7531\u8fd9\u4e24\u5c42\u697c\u53ef\u4ee5\u63a8\u5bfc\u51fa\u540e\u7eed\u6240\u6709\u697c\u7684\u6700\u5c0f\u82b1\u8d39\u3002\u540c\u65f6\uff0c\u9012\u63a8\u987a\u5e8f\uff0c\u5f88\u660e\u663e\u662f\u4ece\u524d\u5f80\u540e\uff0c\u6240\u4ee5\u8fd9\u91cc\u5c31\u76f4\u63a5for\u5faa\u73af\u5373\u53ef\uff0c\u4f46\u662f\u5728\u9047\u5230\u6bd4\u5982\u80cc\u5305\u95ee\u9898\u7684\u65f6\u5019\uff0c\u6211\u4eec\u9700\u8981\u91cd\u65b0\u8003\u8651\uff0c\u56e0\u4e3a\u80cc\u5305\u95ee\u9898\u9700\u8981\u4e24\u4e2afor\u5faa\u73af\uff0c\u56e0\u6b64\u5728\u8003\u8651\u5faa\u73af\u7684\u65f6\u5019\u8981\u91cd\u70b9\u5173\u6ce8for\u5faa\u73af\u7684\u904d\u5386\u987a\u5e8f\u3002\u4f46\u662f\u5728\u672c\u9898\u4e2d\u65e0\u9700\u8fc7\u591a\u5173\u6ce8\u8be5\u95ee\u9898\u3002 \u4ee3\u7801\u5c55\u793a\uff1a int minCostClimbingStairs(vector<int>& cost) { //if(cost.size()<=1) return cost[0]; int dp0=0; int dp1=0; for(int i=2;i<=cost.size();i++){ int sum=min(dp0+cost[i-2],dp1+cost[i-1]); dp0=dp1; dp1=sum; } return dp1; } }; \u603b\u7ed3\uff0c\u603b\u4f53\u4e0a\u8be5\u95ee\u9898\u662f\u5bf9\u524d\u9762\u722c\u697c\u68af\u95ee\u9898\u7684\u4e00\u4e2a\u5ef6\u7eed\u548c\u53d8\u5f62\uff0c\u56e0\u6b64\u6211\u4eec\u5728\u8ba1\u7b97\u7684\u65f6\u5019\uff0c\u9700\u8981\u8fdb\u4e00\u6b65\u8003\u8651\u6bcf\u5c42\u697c\u7684\u6700\u5c0f\u82b1\u8d39\uff0c\u56e0\u6b64\u9700\u8981\u7528\u5230min\u51fd\u6570\uff0c\u540c\u65f6\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u76f8\u5173\u6761\u4ef6\uff0c\u8fdb\u884c\u76f8\u5173\u64cd\u4f5c\u3002","title":"\u722c\u697c\u68af\u7684\u6700\u5c0f\u82b1\u8d39"}]}